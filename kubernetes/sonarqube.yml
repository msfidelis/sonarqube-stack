---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonar-data
  namespace: sonarqube
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonar-extensions
  namespace: sonarqube
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: sonarqube
  labels:
    app: sonarqube
  name: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube  
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
        - name: sonarqube
          image: sonarqube:8.7.1-community
          resources:
            requests:
              cpu: 500m
              memory: 1024Mi
            limits:
              cpu: 2000m
              memory: 2048Mi
          # volumeMounts:
          # - mountPath: "/opt/sonarqube/data/"
          #   name: sonar-data
          # - mountPath: "/opt/sonarqube/extensions/"
          #   name: sonar-extensions
          env:
          - name: "SONARQUBE_JDBC_USERNAME"
            value: "sonar"
          - name: "SONARQUBE_JDBC_URL"
            value: "jdbc:postgresql://postgres.sonarqube.svc.cluster.local/sonar"
          - name: "SONARQUBE_JDBC_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: postgres
                key: password
          ports:
          - containerPort: 9000
            protocol: TCP
          # volumes:
          # - name: sonar-data
          #   persistentVolumeClaim:
          #     claimName: sonar-data
          # - name: sonar-extensions
          #   persistentVolumeClaim:
          #     claimName: sonar-extensions
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube
  namespace: sonarqube
spec:
  selector:
    app: sonarqube
  ports:
    - protocol: TCP
      port: 9000
      name: web
  type: ClusterIP          
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarqube
  namespace: sonarqube
spec:
  rules:
  - host: sonarqube.raj.ninja
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: sonarqube
            port:
              number: 9000
---